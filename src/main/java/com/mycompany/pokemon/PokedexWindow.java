/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.pokemon;

import com.google.gson.Gson;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author ramse
 */
public class PokedexWindow extends javax.swing.JFrame {
    private Gson gson;
    

    private class CustomListModel extends AbstractListModel<String>{
        ArrayList<String> data = new ArrayList<String>();

        public CustomListModel() throws FileNotFoundException{         // Makes my own Custom List so that I can use an arrayList (easier to use)
            super();
            PokemonSearchResults psr = new PokemonSearchResults();
            for (int i = 0; i < 251; i++){
                data.add(psr.getName(i).substring(0, 1).toUpperCase() + psr.getName(i).substring(1));
            }
        }
        
        @Override
        public int getSize() {
            return data.size();
        }

        @Override
        public String getElementAt(int index) {
            return data.get(index);
        }
        
        public String getFullInfoAt(int index){
            return data.get(index);
        }
        
        public int getIndex(String name){
            return data.indexOf(name);                    // Allows me to get the index of a specif pokemon, helps with searching the pokemon
        }
    }
    public PokedexWindow() throws FileNotFoundException {
        initComponents();
        CustomListModel m = new CustomListModel(); 
        jlstPokemon.setModel(m);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
        jTxtFieldType.setVisible(false);
        jtxtfieldSearchBar.setSize(130,31);
        jEditorPane1.setBackground(Color.black);
        
        ImageIcon icon = new ImageIcon(getClass().getResource("/PokemonlogoImage.png"));
        Image img = icon.getImage();
        Image imgScale = img.getScaledInstance(jLblPokemonImg.getWidth(), jLblPokemonImg.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        jLblPokemonImg.setIcon(scaledIcon);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jtxtfieldSearchBar = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jlstPokemon = new javax.swing.JList<>();
        jbtnSearch = new javax.swing.JButton();
        jLabelImg = new javax.swing.JLabel();
        jbtnInfo = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTxtAreaMoves = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTxtAreaAbilities = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTxtFieldType = new javax.swing.JTextField();
        jLblPokemonImg = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jScrollPane4.setViewportView(jEditorPane1);

        jScrollPane6.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pokedex");
        setBackground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jtxtfieldSearchBar.setText("Enter Pokemon Name");
        jtxtfieldSearchBar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jlstPokemon.setBackground(new java.awt.Color(0, 0, 0));
        jlstPokemon.setForeground(new java.awt.Color(255, 255, 255));
        jlstPokemon.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jlstPokemon.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jlstPokemon);

        jbtnSearch.setText("Search");
        jbtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchActionPerformed(evt);
            }
        });

        jLabelImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images.png"))); // NOI18N
        jLabelImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jbtnInfo.setText("Info");
        jbtnInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInfoActionPerformed(evt);
            }
        });

        jTxtAreaMoves.setEditable(false);
        jTxtAreaMoves.setBackground(new java.awt.Color(0, 0, 0));
        jTxtAreaMoves.setColumns(20);
        jTxtAreaMoves.setForeground(new java.awt.Color(255, 255, 255));
        jTxtAreaMoves.setLineWrap(true);
        jTxtAreaMoves.setRows(5);
        jTxtAreaMoves.setBorder(null);
        jTxtAreaMoves.setCaretColor(new java.awt.Color(255, 255, 255));
        jScrollPane7.setViewportView(jTxtAreaMoves);

        jTxtAreaAbilities.setEditable(false);
        jTxtAreaAbilities.setBackground(new java.awt.Color(0, 0, 0));
        jTxtAreaAbilities.setColumns(20);
        jTxtAreaAbilities.setForeground(new java.awt.Color(255, 255, 255));
        jTxtAreaAbilities.setLineWrap(true);
        jTxtAreaAbilities.setRows(5);
        jTxtAreaAbilities.setBorder(null);
        jScrollPane1.setViewportView(jTxtAreaAbilities);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Moves");
        jLabel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Abilities");
        jLabel2.setBorder(new javax.swing.border.MatteBorder(null));

        jTxtFieldType.setEditable(false);
        jTxtFieldType.setBackground(new java.awt.Color(0, 0, 0));
        jTxtFieldType.setForeground(new java.awt.Color(255, 255, 255));
        jTxtFieldType.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jtxtfieldSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnSearch))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTxtFieldType, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(140, 140, 140))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabelImg, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(75, 75, 75))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jbtnInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(134, 134, 134))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLblPokemonImg, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtfieldSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLblPokemonImg, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelImg, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtFieldType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchActionPerformed
        String searchedName = jtxtfieldSearchBar.getText();
        CustomListModel m = ((CustomListModel)jlstPokemon.getModel());
        
     // The code bellow is what allows the fields to be filled out with the specif pokemon information //
     // I surrounded it in a try catch to make sure that if someome entered a name that wasn't a pokemons //
     // then it'll pop up a error message // 
        try {
            int nameIndex = m.getIndex(searchedName);
            jTxtFieldType.setVisible(true);         
            jTxtAreaAbilities.setText(null);
            jTxtAreaMoves.setText(null); 


            ImageIcon icon = new ImageIcon(getClass().getResource("/" + Integer.toString(nameIndex + 1) + ".png"));
            Image img = icon.getImage();
            Image imgScale = img.getScaledInstance(jLabelImg.getWidth() - 50, jLabelImg.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon scaledIcon = new ImageIcon(imgScale);
            jLabelImg.setIcon(scaledIcon);

            Gson gson = new Gson();                                                                      //////////////////////////////////////////////////////////////////////////
            File f = new File(getClass().getResource("/pokemonlist.json").getFile());                    //Same code that is in the PokemonSearchResults//       
            FileReader fr = null;                                                                        /////////////////////////////////////////////////////////////////////////
            try { 
                fr = new FileReader(f);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PokedexWindow.class.getName()).log(Level.SEVERE, null, ex);
            }


            PokemonSearchResults psr = gson.fromJson(fr, PokemonSearchResults.class);
            String strEachPokeUrl = UrlHelper.getResponse(psr.results[nameIndex].url);
            PokemonInfo oneResp = gson.fromJson(strEachPokeUrl, PokemonInfo.class);


            for (int i = 0; i < 4; i++){                                           //This for loop allowed me to get up to 4 moves and abilities//
                String oneMove = oneResp.moves[i].move.name;
                jTxtAreaMoves.append(oneMove +'\n');
                String oneAbility = oneResp.abilities[i].ability.name;
                jTxtAreaAbilities.append(oneAbility + "\n");
                String oneType = oneResp.types[0].type.name;
                jTxtFieldType.setText(oneType);
            }

        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(this, "Pokemon name not entered", "Error", JOptionPane.ERROR_MESSAGE); //This is the error message for entering the wrong inputs//
        }
    }//GEN-LAST:event_jbtnSearchActionPerformed

    private void jbtnInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInfoActionPerformed
        // Does the samething as the searchbtn except with the selected indexed pokemon//
        try{
            int selection = jlstPokemon.getSelectedIndex();
            jTxtAreaMoves.setVisible(true);
            jTxtAreaAbilities.setVisible(true);
            jLabel1.setVisible(true);
            jLabel2.setVisible(true);
            jTxtFieldType.setVisible(true);
            jTxtAreaAbilities.setText(null);
            jTxtAreaMoves.setText(null); 



            ImageIcon icon = new ImageIcon(getClass().getResource("/" + Integer.toString(selection + 1) + ".png"));  ///////////////////////////////////////////////////////////////
            Image img = icon.getImage();
            Image imgScale = img.getScaledInstance(jLabelImg.getWidth() - 50, jLabelImg.getHeight(), Image.SCALE_SMOOTH);      //This sections creates the image of the pokemon//
            ImageIcon scaledIcon = new ImageIcon(imgScale);
            jLabelImg.setIcon(scaledIcon);                                                                             ////////////////////////////////////////////////////////////////

            Gson gson = new Gson();
            File f = new File(getClass().getResource("/pokemonlist.json").getFile());
            FileReader fr = null;
            try {
                fr = new FileReader(f);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PokedexWindow.class.getName()).log(Level.SEVERE, null, ex);
            }


            PokemonSearchResults psr = gson.fromJson(fr, PokemonSearchResults.class);
            String strEachPokeUrl = UrlHelper.getResponse(psr.results[selection].url);
            PokemonInfo oneResp = gson.fromJson(strEachPokeUrl, PokemonInfo.class);


            for (int i = 0; i < 4; i++){                          // This for loop allowed me to get up to 4 moves and abilities
                String oneMove = oneResp.moves[i].move.name;
                jTxtAreaMoves.append(oneMove +'\n');
                String oneAbility = oneResp.abilities[i].ability.name;
                jTxtAreaAbilities.append(oneAbility + "\n");
                String oneType = oneResp.types[0].type.name;       //this is in the for loop because when I took it out it broke the code//
                jTxtFieldType.setText(oneType);                  //no idea why that was the case//
            }
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(this, "There is no pokemon selected", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jbtnInfoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PokedexWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PokedexWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PokedexWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PokedexWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PokedexWindow().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(PokedexWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelImg;
    private javax.swing.JLabel jLblPokemonImg;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextArea jTxtAreaAbilities;
    private javax.swing.JTextArea jTxtAreaMoves;
    private javax.swing.JTextField jTxtFieldType;
    private javax.swing.JButton jbtnInfo;
    private javax.swing.JButton jbtnSearch;
    private javax.swing.JList<String> jlstPokemon;
    private javax.swing.JTextField jtxtfieldSearchBar;
    // End of variables declaration//GEN-END:variables
}
